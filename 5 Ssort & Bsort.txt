def selection_sort(arr):
    n = len(arr)

    for i in range(n - 1):
        min_index = i
        for j in range(i + 1, n):
            if arr[j] < arr[min_index]:
                min_index = j

        # Swap the found minimum element with the first element
        arr[i], arr[min_index] = arr[min_index], arr[i]

def bubble_sort(arr):
    n = len(arr)

    for i in range(n - 1):
        # Last i elements are already sorted, so we don't need to check them
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]:
                # Swap if the element found is greater than the next element
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

def display_top_scores(arr, top_n):
    print(f"\nTop {top_n} Scores:")
    for i in range(min(top_n, len(arr))):
        print(f"{i + 1}. {arr[i]:.2f}%")

def main():
    # Input the number of first-year percentages
    num_percentages = int(input("Enter the number of first-year percentages: "))

    # Input percentages from the user
    percentages = []
    for _ in range(num_percentages):
        percentage = float(input("Enter a percentage: "))
        percentages.append(percentage)

    # Sorting using Selection Sort
    selection_sorted = percentages.copy()
    selection_sort(selection_sorted)

    print("\nFirst-year percentages (Original):", percentages)
    print("First-year percentages (Sorted using Selection Sort):", selection_sorted)

    # Display top five scores after Selection Sort
    display_top_scores(selection_sorted[::-1], 5)

    # Sorting using Bubble Sort
    bubble_sorted = percentages.copy()
    bubble_sort(bubble_sorted)

    print("\nFirst-year percentages (Sorted using Bubble Sort):", bubble_sorted)

    # Display top five scores after Bubble Sort
    display_top_scores(bubble_sorted[::-1], 5)

if __name__ == "__main__":
    main()

